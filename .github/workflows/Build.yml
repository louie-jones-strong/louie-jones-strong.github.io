name: Build

on:
  - push

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  run-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ''
          cache: 'npm'

      - run: npm ci
      - run: npm run PreTests

  build-dev:
    needs: run-tests

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ''
          cache: 'npm'

      - run: npm ci
      - run: node src/BuildSite.js clean compress
      - run: npm run PostTests


  build-release:
    needs: run-tests

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ''
          cache: 'npm'

      - run: npm ci
      - run: node src/BuildSite.js clean release compress
      - run: npm run PostTests

      # Create artifact of the build output for GitHub Pages
      - name: Upload artifact
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-pages-artifact@v2
        with:
          path: docs/



  deploy-release:
    needs: build-release

    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}


    # Run the deployment step only on the main branch
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2